@model QuizWebApp.ViewModels.UserViewModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Moje súťaže";
    var user = await UserManager.GetUserAsync(User);
    bool existsActiveContest = false;
}


@if (user.isTemporary)
{
    <div class="alert alert-warning">
        <p>
            Váš účet je označený ako dočasný a bude zmazaný po 14 dňoch. Pre zachovanie účtu si nastavte:
        </p>
        <ul>
            @if (user.Email.Contains("@frivia.sk"))
            {
                <li><a asp-area="Identity" asp-page="/Account/Manage/Email" class="alert-link">email</a></li>
            }
            @if (user.PasswordHash == null)
            {
                <li><a asp-area="Identity" asp-page="/Account/Manage/SetPassword" class="alert-link">heslo</a></li>
            }
        </ul>
    </div>
}

<p>
    <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
        Naskenovanie QR kódu
    </button>
</p>

<div class="collapse" id="collapseExample">
    <div class="card card-body">
        <div id="loadingMessage">🎥 Nebolo možné načítať video (uistite sa, že máte zapnutú a povolenú kameru)</div>
        <canvas id="canvas" hidden></canvas>
    </div>
</div>

<br />


<h3>Práve prebiehajúce súťaže</h3>
<hr />

@for (int i = 0; i < Model.contests.Count; i++)
{
    @if (Model.contests[i].isActive)
    {
        existsActiveContest = true;
        <div class="card-body">
            <h4>@Model.contests[i].Name</h4>

            @if (Model.answersCount[i] == Model.contests[i].ContestQuestions.Count)
            {
                <p>
                    Výsledné skóre:
                    <span class="font-weight-bold">
                        @Model.correctAnswersCount[i]
                    </span>
                    /
                    <span class="font-weight-bold">
                        @Model.contests[i].ContestQuestions.Count
                    </span>
                </p>

                <div class="progress">
                    <div class="progress-bar bg-success" role="progressbar"
                         style="width: @((int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@((int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                    <div class="progress-bar bg-danger" role="progressbar"
                         style="width: @(100 - (int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@(100 - (int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            }
            else
            {
                <p>
                    Odpovedali ste na @Model.answersCount[i] z @Model.contests[i].ContestQuestions.Count otázok
                </p>

                <div class="progress">
                    <div class="progress-bar bg-info" role="progressbar"
                         style="width: @((int)(((double)Model.answersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@((int)(((double)Model.answersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            }


        </div>
    }
}

@if (!existsActiveContest)
{
    <p>
        Momentálne neprebieha žiadna súťaž.
    </p>
}

<hr />
<br />
<h3>Ukončené súťaže</h3>
<hr />

@for (int i = 0; i < Model.contests.Count; i++)
{
    @if (!Model.contests[i].isActive)
    {
        <div class="card-body contest-inactive">
            <h4>@Model.contests[i].Name</h4>

            @if (Model.answersCount[i] == Model.contests[i].ContestQuestions.Count)
            {
                <p>
                    Výsledné skóre:
                    <span class="font-weight-bold">
                        @Model.correctAnswersCount[i]
                    </span>
                    /
                    <span class="font-weight-bold">
                        @Model.contests[i].ContestQuestions.Count
                    </span>
                </p>

                <div class="progress progress-inactive">
                    <div class="progress-bar bg-success" role="progressbar"
                         style="width: @((int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@((int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                    <div class="progress-bar bg-danger" role="progressbar"
                         style="width: @(100 - (int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@(100 - (int)(((double)Model.correctAnswersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            }
            else
            {
                <p>
                    Odpovedali ste na @Model.answersCount[i] z @Model.contests[i].ContestQuestions.Count otázok
                </p>

                <div class="progress">
                    <div class="progress-bar bg-info" role="progressbar"
                         style="width: @((int)(((double)Model.answersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))%"
                         aria-valuenow="@((int)(((double)Model.answersCount[i] / Model.contests[i].ContestQuestions.Count) * 100))"
                         aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            }
        </div>
    }
}


<script src="~/lib/qr-scanner/jsQR.js"></script>

<script>
    $(document).ready(function () {
        $('#dataTable').DataTable({
            "language": {
                "lengthMenu": "",
                "zeroRecords": "Nenašli sa žiadne záznamy",
                "info": "",
                "infoEmpty": "Žiadne dostupné záznamy",
                "infoFiltered": "",
                "search": "Hľadať",
                "paginate": {
                    "first": "Prvá",
                    "last": "Posledná",
                    "next": "Nasledujúca",
                    "previous": "Predchádzajúca"
                }
            },
            "ordering": false,
            "searching": false
        });
    });

    var video = document.createElement("video");
    var canvasElement = document.getElementById("canvas");
    var canvas = canvasElement.getContext("2d");
    var loadingMessage = document.getElementById("loadingMessage");
    //var outputContainer = document.getElementById("output");
    //var outputMessage = document.getElementById("outputMessage");
    //var outputData = document.getElementById("outputData");

    function drawLine(begin, end, color) {
        canvas.beginPath();
        canvas.moveTo(begin.x, begin.y);
        canvas.lineTo(end.x, end.y);
        canvas.lineWidth = 4;
        canvas.strokeStyle = color;
        canvas.stroke();
    }

    // Use facingMode: environment to attemt to get the front camera on phones
    navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function (stream) {
        video.srcObject = stream;
        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
        video.play();
        requestAnimationFrame(tick);
    });

    function tick() {
        loadingMessage.innerText = "⌛ Loading video..."
        if (video.readyState === video.HAVE_ENOUGH_DATA) {
            loadingMessage.hidden = true;
            canvasElement.hidden = false;
            //outputContainer.hidden = false;


            canvasElement.height = video.videoWidth;
            canvasElement.width = video.videoWidth;
            canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
            var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
            var code = jsQR(imageData.data, imageData.width, imageData.height, {
                inversionAttempts: "dontInvert",
            });
            if (code) {
                drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
                drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
                drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
                drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
                //window.location.replace(code.data);
                window.location.href = code.data;
            }
        }
        requestAnimationFrame(tick);
    }
</script>

